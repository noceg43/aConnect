name: aConnectðŸ‘¥
entities:
  QuestionSet:
    properties:
      - {
          name: name,
          type: string,
          validation: { required: true }
        }
    belongsToMany:
      - Question
    policies:
      read:
        - access: admin
      create:
        - access: admin
      update:
        - access: admin
      delete:
        - access: admin


  Question:
    properties:
      - {
          name: question,
          type: string,
          validation: { required: true}
        }
    belongsToMany:
      - Answer
    policies:
      read:
        - access: admin
      create:
        - access: admin
      update:
        - access: admin
      delete:
        - access: admin


  Answer:
    properties:
      - {
          name: answer,
          type: string,
          validation: { required: true }
        }
    policies:
      read:
        - access: admin
      create:
        - access: admin
      update:
        - access: admin
      delete:
        - access: admin


  Member:
    properties:
      - {
          name: name,
          type: string,
          validation: { required: true }
        }
      - {
          name: socialContact,
          type: string,
          validation: { required: false }
        }
    belongsTo:
      - Lobby
    policies:
      read:
        - access: admin
      create:
        - access: admin
      update:
        - access: admin
      delete:
        - access: admin


  MemberAnswer:
    belongsTo:
      - Member
      - Question
      - Answer
    policies:
      read:
        - access: admin
      create:
        - access: admin
      update:
        - access: admin
      delete:
        - access: admin


  Match:
    belongsToMany:
      - Member
    belongsTo:
      - Lobby
    policies:
      read:
        - access: admin
      create:
        - access: admin
      update:
        - access: admin
      delete:
        - access: admin

  
  Lobby:
    mainProp: name
    properties:
      - {
          name: name,
          type: string,
          validation: { required: true }
        }
      - {
          name: location,
          type: location,
          validation: { required: true }
        }
      - { 
          name: matchType, 
          type: choice, 
          options: { values: [romantic, friendly] },
          validation: { required: true }
        }
      - { 
          name: eventType,
          type: choice, 
          options: { values: [couple, group] },
          validation: { required: true }
        }
      - {
          name: maxMembers,
          type: number,
          validation: { required: true, min: 2 }
        }
      - {
          name: description,
          type: text
        }
      - {
          name: creationDate,
          type: timestamp,
          validation: { required: true }
        }
      - {
          name: preEventDate,
          type: timestamp,
          validation: { required: true }
        }
      - {
          name: eventDate,
          type: timestamp,
          validation: { required: true }
        }
      - {
          name: postEventDate,
          type: timestamp,
          validation: { required: true }
        }
      - {
          name: inviteLink,
          type: link
        }
    policies:
      read:
        - access: admin
      create:
        - access: admin
      update:
        - access: admin
      delete:
        - access: admin


  Feedback:
    properties:
      - {
        name: rating,
        type: number,
        validation: { required: true, min: 1, max: 5 }
        }
    belongsTo:
      - Lobby
      - Member
    belongsToMany:
      - Member
    policies:
      read:
        - access: admin
      create:
        - access: admin
      update:
        - access: admin
      delete:
        - access: admin
